@import 'tailwindcss';
@config '../tailwind.config.js';

/* geist-mono-latin-300-normal */
@font-face {
  font-family: 'Geist Mono';
  font-style: normal;
  font-display: swap;
  font-weight: 300;
  src: url(/styleguide-assets/fonts/geist-mono-latin-300-normal.woff2) format('woff2');
}

/* geist-mono-latin-400-normal */
@font-face {
  font-family: 'Geist Mono';
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src: url(/styleguide-assets/fonts/geist-mono-latin-400-normal.woff2) format('woff2');
}

/* geist-mono-latin-600-normal */
@font-face {
  font-family: 'Geist Mono';
  font-style: normal;
  font-display: swap;
  font-weight: 600;
  src: url(/styleguide-assets/fonts/geist-mono-latin-600-normal.woff2) format('woff2');
}

/* geist-sans-latin-300-normal */
@font-face {
  font-family: 'Geist Sans';
  font-style: normal;
  font-display: swap;
  font-weight: 300;
  src: url(/styleguide-assets/fonts/geist-sans-latin-300-normal.woff2) format('woff2');
}

/* geist-sans-latin-400-normal */
@font-face {
  font-family: 'Geist Sans';
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src: url(/styleguide-assets/fonts/geist-sans-latin-400-normal.woff2) format('woff2');
}

/* geist-sans-latin-600-normal */
@font-face {
  font-family: 'Geist Sans';
  font-style: normal;
  font-display: swap;
  font-weight: 600;
  src: url(/styleguide-assets/fonts/geist-sans-latin-600-normal.woff2) format('woff2');
}

@layer utilities {
  html {
    view-transition-name: none;
  }

  :root {
    color-scheme: light dark;

    /* color primitive black */
    --cp-neutral-0: hsl(0deg 0% 0%);
    --cp-neutral-04: hsl(0deg 0% 4%);
    --cp-neutral-12: hsl(0deg 0% 12%);
    --cp-neutral-40: hsl(0deg 0% 40%);
    --cp-neutral-64: hsl(0deg 0% 64%);
    --cp-neutral-92: hsl(0deg 0% 92%);
    --cp-neutral-98: hsl(0deg 0% 98%);
    --cp-neutral-100: hsl(0deg 0% 100%);

    /* Color primitive blue */
    --cp-blue-11: hsl(221deg 40% 11%);

    /* Color alias primary theme color */
    --ca-theme-highlight: var(--cp-blue-11);

    /* Background colors */
    --styleguide-color-background: light-dark(var(--cp-neutral-98), var(--cp-neutral-0));
    --styleguide-color-background-highlight: light-dark(var(--cp-neutral-100), var(--cp-neutral-04));

    /* Text colors */
    --styleguide-color-highlight: light-dark(var(--ca-theme-highlight), var(--cp-neutral-100));
    --styleguide-color-regular: light-dark(var(--cp-neutral-40), var(--cp-neutral-64));

    /* Border colors */
    --styleguide-color-border: light-dark(var(--cp-neutral-92), var(--cp-neutral-12));
  }

  body {
    @apply invisible;
    background-color: var(--styleguide-color-background);
    color: var(--styleguide-color-regular);
  }

  body.js-loaded {
    @apply visible;
  }

  body.is-scrolling iframe {
    @apply pointer-events-none;
  }

  summary {
    list-style: none;
  }

  summary::marker,
  summary::-webkit-details-marker {
    display: none;
  }

  .theme-normal {
    color-scheme: light dark;
  }

  .theme-light {
    color-scheme: only light;
  }

  .theme-dark {
    color-scheme: only dark;
  }

  /* Hide elements based on OS */
  body:not([data-os='mac']) .mac-only,
  body:not([data-os='windows'], [data-os='linux']) .winlinux-only {
    display: none;
  }

  body[data-is-mobile='true'] .desktop-device-only {
    display: none;
  }

  .theme-dark {
    .shiki,
    .shiki span {
      color: var(--shiki-dark) !important;
      background-color: var(--shiki-dark-bg) !important;
      /* Optional, if you also want font styles */
      font-style: var(--shiki-dark-font-style) !important;
      font-weight: var(--shiki-dark-font-weight) !important;
      text-decoration: var(--shiki-dark-text-decoration) !important;
    }
  }

  /* Disable shiki background color */
  .code-highlight pre.shiki.shiki-themes {
    background-color: transparent !important;
  }

  :is(.theme-select, .editor-select) input[type="radio"]:checked + label {
    @apply outline outline-styleguide-border rounded-3xl;
  }

  :is(.theme-select, .editor-select) input[type="radio"]:focus + label,
  :is(.theme-select, .editor-select) input[type="radio"] + label:hover {
    @apply outline-blue-600;
  }

  .dialog-backdrop {
    display: none;
    position: absolute;
    backdrop-filter: blur(3px) brightness(0.7);
    inset: 0;
    opacity: 0;
    pointer-events: none;
    z-index: 100;
  }

  .search-category {
    display: none;
  }

  .search-category__item:not(.search-category__item--active) {
    display: none;
  }

  .search-category:has(.search-category__item--active) {
    display: block;
  }

  .icon-search-list__item-copy-icon {
    @apply opacity-0 pointer-events-none absolute left-1/2 -translate-x-1/2;
  }

  .menu-item {
    @apply block p-3 rounded-md text-sm hover:bg-[rgb(242,242,242)] focus:bg-[rgb(242,242,242)] dark:hover:bg-[rgb(26,26,26)] dark:focus:bg-[rgb(26,26,26)] transition;
  }

  .menu-item--active {
    @apply bg-[rgb(242,242,242)] dark:bg-[rgb(26,26,26)];
  }

  [class*='menu-item--status-'] {
    @apply grid grid-cols-[1fr_auto] items-center gap-4;
  }

  .menu-item--status-complete::after {
    content: 'ðŸŸ¢';
  }

  .menu-item--status-progress::after {
    content: 'ðŸš§';
  }

  .menu-item--status-feedback::after {
    content: 'ðŸ’¬';
  }

  .menu-item--status-pending::after {
    content: 'ðŸ”´';
  }

  .preview-iframe {
    width: 100%;
    overflow-y: hidden;
    min-height: 0;
    border: none;
  }

  .c-toast {
    @apply
    fixed
    flex
    items-center
    gap-2
    bottom-4
    right-4
    left-4
    md:left-auto
    justify-center
    md:justify-start
    p-4
    border-1
    border-styleguide-border
    bg-styleguide-bg-highlight
    text-[12px]
    font-mono
    [&>span]:text-styleguide-highlight
    font-semibold
    rounded-lg
    shadow-2xl
    after:absolute
    after:inset-x-0
    after:top-[-5px]
    after:h-[5px]
    after:w-full;
  }

  /* Markdown specific styling */
  .markdown-container {
    @apply leading-6;

    /* Increase spacing to headline for all elements other than paragraphs */
    > :first-child:not(p) {
      @apply mt-[1em];
    }

    /* Add max with for everything but code blocks */
    > :not(pre) {
      @apply max-w-[65ch];
    }

    > :not(:last-child) {
      @apply mb-4;
    }

    :is(h1, h2, h3, h4, h5, h6, strong) {
      @apply font-semibold text-styleguide-highlight;
    }

    :is(h1, h2, h3, h4, h5, h6):has(+ p) {
      @apply !mb-1.5;
    }

    :is(h1,h2,h3,h4,h5,h6):not(:first-child) {
      @apply mt-[1.5em];
    }

    :is(h1, h2) {
      @apply text-xl;
    }

    h3 {
      @apply text-lg;
    }

    h4 {
      @apply text-base;
    }

    :is(h5, h6) {
      @apply text-sm;
    }

    a {
      @apply text-styleguide-theme-highlight font-semibold;
    }

    a::after {
      @apply inline-block ml-1 bg-styleguide-theme-highlight bg-contain -mb-px;

      --icon-size: 1em;

      content: '';
      inline-size: var(--icon-size);
      block-size: var(--icon-size);
      mask-image: url('/icons/external-link.svg');
    }

    :is(ul, ol) {
      @apply pl-5;
    }

    ul {
      @apply list-disc;
    }

    ol {
      @apply list-decimal;
    }

    /* markdown code block */
    :is(.shiki, pre:not(.shiki)) {
      @apply max-w-[83ch] px-6 py-5;
    }

    /* markdown inline code */
    :not(:is(pre)) > code {
      @apply px-1.5 py-0.5 text-sm bg-[rgb(242,242,242)] dark:bg-[rgb(26,26,26)] font-mono text-styleguide-highlight rounded-md;
    }
  }

  :is(.markdown-container, .code-audit-container) {

    /* code block */
    :is(.shiki, pre:not(.shiki)) {
      @apply max-w-full overflow-x-auto px-4 py-2 text-sm rounded-2xl bg-styleguide-bg-highlight border border-styleguide-border;

      > code {
        @apply inline-block;
      }
    }
  }
}

body:not(.editor-vscode) .editor-vscode-only {
  @apply hidden;
}

body:not(.editor-phpstorm) .editor-phpstorm-only {
  @apply hidden;
}
